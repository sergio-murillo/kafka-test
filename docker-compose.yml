services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  appsocado-api:
    container_name: appsocado-api
    image: appsocado-api
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: development # Only will build development stage from our dockerfile
    volumes:
      - ./:/usr/src/app
    ports:
      - ${PORT}:${PORT}
    env_file:
      - .env # Available inside container not in compose file
    environment:
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - sqlite
      - nestjs-redis
      - kafka
    links:
      - sqlite
      - nestjs-redis
      - kafka
    command: npm start # Run in development mode

  sqlite:
    image: alpine:latest
    volumes:
      - ./database:/data
    command: sh -c "apk --no-cache add sqlite && cp /data/appsocado.sqlite /data/db.sqlite && sqlite3 /data/db.sqlite < /data/init.sql && tail -f /dev/null"
    container_name: sqlite

  sqlitebrowser:
    image: linuxserver/sqlitebrowser
    ports:
      - "3000:3000"
    depends_on:
      - sqlite
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - ENABLE_UWSGI=true
    volumes:
      - sqlite:/data/db
    container_name: sqlitebrowser

  nestjs-redis:
    container_name: nestjs-redis
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis:/data
    ports:
      - 6379:${REDIS_PORT}
    hostname: redis
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      retries: 3
      timeout: 3s

volumes:
  sqlite:
    name: sqlite
    external: true
  redis:
    name: nestjs-redis
